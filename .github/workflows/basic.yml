name: Basic

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate cache key
        id: cache-key
        run: echo "::set-output name=key::${{ runner.os }}-$(date +%Y-%m-%d)-$(git rev-parse --short HEAD)"
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-${{ github.event.pull_request.head.repo.default_branch }}-
            ${{ runner.os }}-

  fmt:
    needs: prepare
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust environment
        run: |
          source $HOME/.cargo/env
          rustup default nightly
      - name: Cargo fmt
        run: cargo fmt --all -- --check

  lint-and-check:
    needs: prepare
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust environment
        run: |
          source $HOME/.cargo/env
          rustup default nightly
          echo "CARGO_NET_GIT_FETCH_WITH_CLI=true" >> $GITHUB_ENV
      - name: Cargo clippy
        run: cargo clippy -- -D warnings
      - name: Check Code
        run: cargo check
