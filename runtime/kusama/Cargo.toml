[package]
# RegionX Kusama runtime
name = "regionx-kusama-runtime"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
anyhow = { workspace = true, default-features = false }
codec = { workspace = true }
log = { workspace = true }
scale-info = { workspace = true }
smallvec = { workspace = true }
serde_json = { features = ["alloc"], workspace = true }

# Local
regionx-runtime-common = { workspace = true, default-features = false }
pallet-market = { workspace = true, default-features = false }
pallet-orders = { workspace = true, default-features = false }
pallet-processor = { workspace = true, default-features = false }
pallet-regions = { workspace = true, default-features = false }
order-primitives = { workspace = true, default-features = false }

# Polytope Labs
ismp = { workspace = true }
pallet-ismp = { workspace = true, features = ["unsigned"] }
ismp-parachain = { workspace = true }
pallet-ismp-runtime-api = { workspace = true }
ismp-parachain-runtime-api = { workspace = true }

# Substrate
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-broker = { workspace = true, optional = true }
pallet-message-queue = { workspace = true }
pallet-mmr-tree = { workspace = true }
pallet-mmr-runtime-api = { workspace = true }
pallet-multisig = { workspace = true }
pallet-proxy = { workspace = true }
pallet-preimage = { workspace = true }
pallet-session = { workspace = true }
pallet-sudo = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-mmr-primitives = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-aura = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-utility = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
pallet-collator-selection = { workspace = true }
parachains-common = { workspace = true }
parachain-info = { workspace = true }

[features]
default = ["std"]
std = [
	"anyhow/std",
	"codec/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"cumulus-primitives-timestamp/std",
	"pallet-ismp/std",
	"pallet-ismp-runtime-api/std",
	"ismp/std",
	"ismp-parachain/std",
	"ismp-parachain-runtime-api/std",
	"frame-benchmarking?/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"log/std",
	"order-primitives/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-broker/std",
	"pallet-collator-selection/std",
	"pallet-processor/std",
	"pallet-regions/std",
	"pallet-market/std",
	"pallet-message-queue/std",
	"pallet-mmr-tree/std",
	"pallet-mmr-runtime-api/std",
	"pallet-multisig/std",
	"pallet-orders/std",
	"pallet-proxy/std",
	"pallet-preimage/std",
	"pallet-session/std",
	"pallet-sudo/std",
	"pallet-scheduler/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-utility/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"parachains-common/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"regionx-runtime-common/std",
	"scale-info/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"sp-mmr-primitives/std",
	"serde_json/std",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm/std",
]

runtime-benchmarks = [
	"cumulus-pallet-dmp-queue/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-broker/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-market/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-mmr-tree/runtime-benchmarks",
  	"pallet-multisig/runtime-benchmarks",
	"pallet-orders/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-processor/runtime-benchmarks",
	"pallet-regions/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
]

try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-ismp/try-runtime",
	"ismp-parachain/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-market/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-mmr-tree/try-runtime",
  	"pallet-multisig/try-runtime",
	"pallet-orders/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-processor/try-runtime",
	"pallet-regions/try-runtime",
	"pallet-session/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"sp-runtime/try-runtime",
]

# Reducing waiting times for governance or other
fast-runtime = []

# experimental = ["pallet-aura/experimental"]
